<project name="OpenLaszlo_W3C_Widget_Generator" default="all" basedir=".">
<!-- Copyright: Mobile OpenLaszlo, Raju Bitter
     http://github.com/raju-bitter/mobile-openlaszlo
     MIT license http://www.opensource.org/licenses/mit-license.php
     Use is subject to license terms. 

     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     THE SOFTWARE.

   IMPORTANT:
   Please set the following vars in your custom build.properties file.
        
       target.file= LZX file you want to compile
       
       Adjust the presets for the widget descriptor properties.
       
  The environment variable $LPS_HOME must point to a folder containing an
  installation of OpenLaszlo 4.7+ (or OpenLaszlo TRUNK).
  
-->

  <description>Compile HTML5 LZX app and package it as W3C Widget.</description>

  <!-- Ignore the system classpath -->
  <property name="build.sysclasspath" value="ignore" />

  <property environment="env"/>

  <!-- OpenLaszlo properties -->
  <property name="LPS_HOME" value="${env.LPS_HOME}"/>
  <property file="${basedir}/build.properties"/>

  <!-- Compile and package temp folders -->
  <property name="temp.folder" value="./temp" />
  <property name="temp.zip.package" value="${temp.folder}/zip" />
  <property name="temp.zip.extracted" value="${temp.folder}/extracted" />
  <property name="temp.w3cwidget" value="${temp.folder}/w3cwidget" />

  <!-- CLASSPATH for Laszlo compiler lzc -->
  <path id="laszlo.compiler.classpath">
    <pathelement location="${LPS_HOME}/WEB-INF/lps/server/build"/>
    <pathelement location="${LPS_HOME}/WEB-INF/classes"/>
    <pathelement location="${servlet.jar}"/>
    <fileset dir="${LPS_HOME}/WEB-INF/lib" includes="**/*.jar"/>
  </path>

  <!--================  Target [all]  ===================-->
  <target name="all" 
      description="Compile LZX file and copy generated files to PhoneGap assets/www folder"
      depends="clean, compile-to-js, process-zip-package, copy-to-w3cwidget-temp, package-widget-wgt">
  </target>

  <!--================  Target [clean] ==============-->
  <target name="clean">
    <delete>
      <fileset dir="." defaultexcludes="no" >
        <include name="temp/*~"/>
        <include name="build/**" />
        <include name="${widget.widgetname}.wgt" />
      </fileset>
    </delete>
    <delete dir="temp" /> 
  </target>

  <!-- Remove the files generated into the basedir when compiling and
       creating the zip package -->
  <target name="package-cleanup">
    <script language="javascript">
      var spriteFile = OpenLaszlo_W3C_Widget_Generator.getProperty("target.file")
               .replace(".lzx", "") + ".sprite.png";
      OpenLaszlo_W3C_Widget_Generator.setProperty("target.sprite.png", spriteFile);
    </script>
  <delete file="${target.sprite.png}" />
  <delete file="${target.file}.js" />
    <delete dir="lps" />
  </target>

  <!--================  Target [init] ==============-->
  <target name="init" depends="checkForLZXFile,checkForWidgetTemplateFiles">
    <fail message="LPS_HOME not set" unless="env.LPS_HOME"/>
    <fail message="Target LZX file for compilation not set in build.properties" unless="target.file"/> 
    <fail message="W3C Widget descriptor template folder not set in build.properties" unless="widget.template.folder"/>
    <fail message="W3C Widget descriptor template not set in build.properties" unless="widget.template.descriptor"/>
  
    <!-- Temp folder for ZIP package -->
    <mkdir dir="${temp.folder}" />
    <mkdir dir="${temp.zip.package}" />
    <mkdir dir="${temp.zip.extracted}" />
  </target>

  <target name="checkForLZXFile" depends="lzx.file.check" if="lzx.file.missing">
    <fail message="The LZX file &lt;${target.file}&gt; could not be found!" />
  </target>

  <target name="checkForWidgetTemplateFiles" depends="widget.config.files.check" if="widget.config.files.missing">
    <fail message="${widget.template.folder}/${widget.template.descriptor} or ${widget.template.folder}/${widget.icon} file missing!" />
  </target>
  
  <!--================  Target [compile-to-js] ==============-->
  <target name="compile-to-js" 
      description="Compile the OpenLaszlo LZX file to HTML5 JavaScript"
      depends="init" >
    <echo message="Start compilation of ${target.file} with the OpenLaszlo compiler" />
    <antcall target="compile-and-package">
      <param name="file" value="${target.file}" />
      <param name="args" value="--runtime=dhtml --output ${basedir}/temp/zip/app-package.zip" />
    </antcall>
  </target>

  <!-- Compile the file to JavaScript and package the LPS resources into it -->
  <target name="compile-and-package" description="Compiling to JavaScript and packaging ZIP">
    <echo message="Compiling ${file}"/>
    <echo message="args: ${args} ${file}"/>
    <echo message="Using LPS_HOME: ${LPS_HOME}"/>
    <java classpathref="laszlo.compiler.classpath" classname="org.openlaszlo.utils.DeployMain" fork="yes">
      <jvmarg value="-Xmx1024M"/>
      <jvmarg value="-DLPS_HOME=${LPS_HOME}"/>
      <arg line=" ${args} ${file}"/>
    </java>
  </target>

  <!-- Unzip the OpenLaszlo deployment ZIP file --> 
  <target name="process-zip-package" depends="compile-to-js">
    <unzip src="${basedir}/temp/zip/app-package.zip" dest="${temp.zip.extracted}">
      <patternset>
        <include name="lps/"/>
        <include name="${target.file}.js" />
        <include name="${target.file}.html" />
      </patternset>
  </unzip>
  </target>

  <!-- Copy all required files into the Widget temp folder for packaging.
       All markers in the config.xml template file will be replaced by the values
       found in the build.properties file -->
  <target name="copy-to-w3cwidget-temp" depends="compile-to-js, package-cleanup">
    <echo message="Copying files from ${tempPathToAS3Files} to ${phonegap.www.folder}" />
    <copy todir="${temp.w3cwidget}">
      <fileset dir="${temp.zip.extracted}" casesensitive="yes">
      </fileset>
    </copy>
    <copy todir="${temp.w3cwidget}">
      <fileset dir="${widget.template.folder}">
        <include name="config.xml" /> 
        <include name="icon.png" /> 
      </fileset>
      <filterset>
        <!-- Replace markers in widget descriptor file with values in build.properties -->
        <filter token="dockable" value="${widget.dockable}" />
        <filter token="floatable" value="${widget.floatable}" />
        <filter token="widgetname" value="${widget.widgetname}" />
        <filter token="description" value="${widget.description}" />
        <filter token="icon" value="${widget.icon}" />
        <filter token="width" value="${widget.width}" />
        <filter token="height" value="${widget.height}" />
        <filter token="author.name" value="${widget.author.name}" />
        <filter token="author.organization" value="${widget.author.organization}" />
        <filter token="author.link" value="${widget.author.link}" />
        <filter token="author.email" value="${widget.author.email}" />
        <filter token="security.access.protocol" value="${widget.security.access.protocol}" />
        <filter token="security.access.host" value="${widget.security.access.host}" />
        <filter token="security.access.port" value="${widget.security.access.port}" />
        <filter token="security.access.path" value="${widget.security.access.path}" />
        <filter token="update._url" value="${widget.update._url}" />
        <filter token="license" value="${widget.license}" />
      </filterset>
    </copy>
    <!-- Rename HTML file to index.html -->
    <move file="${temp.w3cwidget}/${target.file}.html" tofile="${temp.w3cwidget}/index.html"/>
  </target>
  
  <target name="package-widget-wgt">
    <zip destfile="${widget.widgetname}.wgt"
         basedir="${temp.w3cwidget}"
    />
  </target>

  <!--================  Helper targets  =================-->
  <!-- Check if the LZX file in ${target.file} exists --> 
  <target name="lzx.file.check">
    <condition property="lzx.file.missing">
    <not>
        <available file="${target.file}" type="file"/>
      </not>
    </condition>
  </target>
  <!-- Check if the LZX file in ${target.file} exists --> 
  <target name="widget.config.files.check">
    <condition property="widget.config.files.missing">
      <or>
        <not>
          <available file="${widget.template.folder}/${widget.template.descriptor}" type="file"/>
        </not>
        <not>
          <available file="${widget.template.folder}/${widget.icon}" type="file"/>
        </not>
      </or>
    </condition>
  </target>
  
</project>
